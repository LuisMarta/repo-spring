apiVersion: apps/v1beta2
kind: Deployment
metadata:
{{- with .Values.deployment.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  name: {{ template "livelo-spring.fullname" . }}
  labels:
    app: {{ template "livelo-spring.name" . }}
    chart: {{ template "livelo-spring.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "livelo-spring.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "livelo-spring.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
{{- with .Values.env }}
{{ toYaml . | indent 10 }}
{{- end }}
{{- if  eq (index .Values "deployment" "annotations" "k8s.pontoslivelo.com.br/db-rabbitmq") "true" }}
          - name: RABBIT_USERNAME
            valueFrom:
              secretKeyRef: 
                name: {{ template "livelo-spring.fullname" . }}-rabbit-mq
                key: rabbit_username
          - name: RABBIT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "livelo-spring.fullname" . }}-rabbit-mq
                key: rabbit_password
          - name: RABBIT_HOST
            valueFrom:
              secretKeyRef: 
                name: {{ template "livelo-spring.fullname" . }}-rabbit-mq
                key: rabbit_host
          - name: RABBIT_PORT
            valueFrom:
              secretKeyRef: 
                name: {{ template "livelo-spring.fullname" . }}-rabbit-mq
                key: rabbit_port
{{- end }}
{{- if  eq (index .Values "deployment" "annotations" "k8s.pontoslivelo.com.br/db-oracle") "true" }}
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef: 
                name: {{ template "livelo-spring.fullname" . }}-db-oracle
                key: database_url
          - name: DATABASE_USERNAME
            valueFrom:
              secretKeyRef: 
                name: {{ template "livelo-spring.fullname" . }}-db-oracle
                key: database_username
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "livelo-spring.fullname" . }}-db-oracle
                key: database_password
{{- end }}
{{- if  eq (index .Values "deployment" "annotations" "k8s.pontoslivelo.com.br/db-mongo") "true" }}
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef: 
                name: {{ template "livelo-spring.fullname" . }}-db-mongo
                key: database_url
          - name: DATABASE_USERNAME
            valueFrom:
              secretKeyRef: 
                name: {{ template "livelo-spring.fullname" . }}-db-mongo
                key: database_username
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "livelo-spring.fullname" . }}-db-mongo
                key: database_password
{{- end }}
{{- if  eq (index .Values "deployment" "annotations" "k8s.pontoslivelo.com.br/db-redis") "true" }}
          - name: CACHE_URL
            valueFrom:
              secretKeyRef: 
                name: {{ template "livelo-spring.fullname" . }}-redis
                key: cache_url
          - name: CACHE_USERNAME
            valueFrom:
              secretKeyRef: 
                name: {{ template "livelo-spring.fullname" . }}-redis
                key: cache_username
          - name: CACHE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "livelo-spring.fullname" . }}-redis
                key: cache_password
{{- end }}
          # livenessProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: http
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: http
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 10
          #   failureThreshold: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
